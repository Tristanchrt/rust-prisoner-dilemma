import { Button, VerticalBox , HorizontalBox, GridBox, ComboBox} from "std-widgets.slint";

export component Menu {
    in property <bool> is_visible;
    callback clicked(string);

    GridLayout {
        visible: is_visible;

            Row  {
                Text {
                    text: "Welcome to the Game !!";
                    horizontal-alignment: center;
                    color: black;
                }
            }
            Row {
                Rectangle {
                    height: 50px;
                }
            }
            Row {
                HorizontalBox {
                    Button {
                        text: "Create Game";
                        clicked => {
                            root.clicked("CREATE");
                        }
                        visible: true;
                    }
                    Button {
                        text: "Join Game";
                        clicked => {
                            root.clicked("JOIN");
                        }
                    }
                }
            }
        }
}

export component Searching {
    in property <bool> is_visible; 

    GridLayout {
        visible: is_visible;
            Row  {
                Text {
                    text: "Searching for a game....";
                    horizontal-alignment: center;
                    color: black;
                }
            }
    }
}
export component Waiting {
    in property <bool> is_visible; 

    GridLayout {
        visible: is_visible;
            Row  {
                Text {
                    text: "Wating for player....";
                    horizontal-alignment: center;
                    color: black;
                }
            }
    }
}

export component Party {
    in property <bool> is_visible; 

    GridLayout {

    }
    
}

export component CreateGame {
    callback clicked;
    in property <int> number_round;
    in property <int> number_bet;
    in property <bool> is_visible;

    GridLayout {
        visible: is_visible;
        padding-right: 24px;
        padding-left: 24px;
        padding-top: 24px;
        padding-bottom: 24px;
            Row  {
                Text {
                    text: "Create Game";
                    horizontal-alignment: center;
                    color: black;
                    height: 20px;
                    font-weight: 800;
                    font-size: 16px;
                }
            }
            VerticalBox  { 
                VerticalBox  {
                    Text {
                        text: "Round for the party:";
                        horizontal-alignment: left;
                        color: black;
                        height: 20px;
                    }
                    TextInput {
                        selection-background-color: grey;
                        text: number_round;
                        height: 20px;
                        single-line: true;
                        input-type: number;
                    }
                }
                VerticalBox  {
                    Text {
                        text: "Bet per game:";
                        font-italic: true;
                        horizontal-alignment: left;
                        color: black;
                        height: 20px;
                    }
                    TextInput {
                        selection-background-color: grey;
                        text: number_bet;
                        height: 20px;
                        single-line: true;
                        input-type: number;
                    }
                }
                Button {
                    height: 32px;
                    text: "Create Game";
                    clicked => {
                        root.clicked();
                    }
                }
            }
    }
}

export component GameChoice {
    in property <int> party_id;
    in property <int> party_rounds;
    in property <float> player1_money;
    in property <bool> is_visible;
    in property <int> total_rounds;


    callback party_betray();
    callback party_cooperat(); GridLayout { 
        visible: is_visible; padding-right: 24px; padding-left: 24px; padding-top: 24px; padding-bottom: 24px; VerticalBox { Text { text: "Party  #"+ party_id +" round: " + party_rounds + "/" + total_rounds; font-italic: true; horizontal-alignment: center; color: black; height: 32px; font-weight: 800; font-size: 16px; } HorizontalBox { height: 32px; Text { text: "Player: " + player1_money; font-italic: true; horizontal-alignment: center; color: black; } } Button { height: 32px; text: "Cooperat";
                clicked => {
                    root.party_cooperat()
                }
            }
            Button {
                height: 32px;
                text: "Betray";
                clicked => {
                    root.party-betray()
                }
            }
        
        }
    }
}

export component AppWindow inherits Window {
    in property <bool> menu_visible;
    in property <bool> search_visible;
    in property <bool> create_visible;
    in property <bool> wait_visible;
    in property <bool> game_visible;

    in property <int> number_round;
    in property <int> number_bet;
    in property <int> party_id;
    in property <int> party_rounds;
    in property <int> total_rounds;
    in property <int> player_id;
    in property <float> player1_money;
    
    callback event-game(string);
    callback create_game();
    callback party_cooperat();
    callback party_betray();

    width: 300px;
    height: 300px;

    Menu {
        is_visible: menu_visible;
        clicked(value) =>{
            root.event-game(value);
        }
    }

    Waiting {
        is-visible: wait_visible;
    }
  
    Searching {
        is_visible: search_visible;
    }

    CreateGame {
        is_visible: create_visible;
        number_round: number_round;
        number_bet: number_bet;
        clicked =>{
            root.create_game();
        }
    }

    GameChoice {
        is_visible: game_visible;
        party_id: party_id;
        party_rounds: party_rounds;
        player1_money: player1_money;
        total_rounds: total_rounds;
        party_betray => {
            root.party_betray();
        }
        party_cooperat => {
            root.party_cooperat();
        }

    }
    



}